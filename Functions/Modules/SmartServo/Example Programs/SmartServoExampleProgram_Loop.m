% Example Smart Servo motor program: Loop Mode
% This example motor program demonstrates usage of loop mode.
% The program cycles through 4 positions for 15 seconds each time it is run.
% At each step, a position instruction is sent to the servo. However, the
% loop returns to step 1 before the final goal position is reached. A fifth
% step is added to permit time for the motor to reach the fourth position in the cycle.

% S = SmartServoModule('COM3'); % Uncomment and replace 'COM3' with the SmartServoModule's serial port name

S.motor(1,1).controlMode = 1; % Mode 1 = position mode

prog1 = S.newProgram();    % Create a new motor program
prog1.nLoops = 3;          % Loop the entire program 3 times when triggered
prog1 = S.addMovement(prog1, 'Channel', 1,...            % Target motor channel (1-3)
                             'Address', 1,...            % Target motor address (1-8)
                             'GoalPosition', 45,...      % degrees
                             'MaxVelocity', 2,...      % units = rev/s, use 0 for max
                             'OnsetTime', 0);            % seconds after program start

prog1 = S.addMovement(prog1, 'Channel', 1,...
                             'Address', 1,...
                             'GoalPosition', 90,...
                             'MaxVelocity', 2,...
                             'OnsetTime', 1);

prog1 = S.addMovement(prog1, 'Channel', 1,...
                             'Address', 1,...
                             'GoalPosition', 135,...
                             'MaxVelocity', 2,...
                             'OnsetTime', 2);

prog1 = S.addMovement(prog1, 'Channel', 1,...
                             'Address', 1,...
                             'GoalPosition', 180,...
                             'MaxVelocity', 0.5,...
                             'OnsetTime', 3);

prog1 = S.addMovement(prog1, 'Channel', 1,... % A 5th instruction to 180 deg. adds time for the motor to reach the final goal
                             'Address', 1,...
                             'GoalPosition', 180,...
                             'MaxVelocity', 0.5,...
                             'OnsetTime', 4);
S.loadProgram(1, prog1); % Load prog1 to program index 1 on the device
S.runProgram(1); % Run program 1. This can also be done from the state machine in the output actions of a state:
                 % {'SmartServo1', ['R' 0]}; % Note that 0-indexing is used to address programs on the Arduino side
