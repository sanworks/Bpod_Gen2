% Example Smart Servo motor program: Two Moves x Two motors
% This example motor program demonstrates a program with a sequence of two position moves.
% Each move is executed by motors at address 1 on channels 1 and 2 in parallel.

% S = SmartServoModule('COM3'); % Uncomment and replace 'COM3' with the SmartServoModule's serial port name

S.motor(1,1).controlMode = 1; % Motor on Ch1, Address 1. Mode 1 = position mode
S.motor(2,1).controlMode = 1; % Motor on Ch2, Address 1. Mode 1 = position mode

prog1 = S.newProgram; % Create a new motor program
prog1 = S.addMovement(prog1, 'Channel', 1,...            % Target motor channel (1-3)
                             'Address', 1,...            % Target motor address (1-8)
                             'GoalPosition', 180,...      % degrees
                             'MaxVelocity', 1,...        % units = rev/s, use 0 for max
                             'OnsetTime', 0);            % seconds after program start

prog1 = S.addMovement(prog1, 'Channel', 2,...            
                             'Address', 1,... 
                             'GoalPosition', 180,...      
                             'MaxVelocity', 1,...      
                             'OnsetTime', 0);            

prog1 = S.addMovement(prog1, 'Channel', 1,...            
                             'Address', 1,...
                             'GoalPosition', 0,...       
                             'MaxVelocity', 0.5,...       
                             'OnsetTime', 1);    

prog1 = S.addMovement(prog1, 'Channel', 2,...            
                             'Address', 1,...
                             'GoalPosition', 0,...       
                             'MaxVelocity', 0.5,...        
                             'OnsetTime', 1);            

S.loadProgram(2, prog1); % Load prog1 to program index 2 on the device
S.runProgram(2); % Run program 2. This can also be done from the state machine in the output actions of a state:
                 % {'SmartServo1', ['R' 1]}; % Note that 0-indexing is used to address programs on the Arduino side
